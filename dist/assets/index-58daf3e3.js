var d=Object.defineProperty;var l=(t,e,r)=>e in t?d(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;var s=(t,e,r)=>(l(t,typeof e!="symbol"?e+"":e,r),r);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function r(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerPolicy&&(n.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?n.credentials="include":o.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(o){if(o.ep)return;o.ep=!0;const n=r(o);fetch(o.href,n)}})();class f{constructor(e,r,i){s(this,"statusCode");s(this,"message");s(this,"data");this.statusCode=e,this.message=r,this.data=i}}class m{constructor(e){s(this,"message");this.message=e}}async function p(t){const e=await fetch("https://dummy-site.dev/posts",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),r=await e.json();if(!e.ok)throw new f(e.status,"Sending the request failed.",r);return r}function c(t,e){if(!t||t.trim().length===0)throw new m(e)}function h(t){return t.created=new Date,p(t)}function y(t){const e=t.get("title"),r=t.get("content");return c(e,"A title must be provided."),c(r,"Content must not be empty!"),{title:e,content:r}}function g(t){const e=document.getElementById("errors"),r=document.createElement("p");r.textContent=t,e.innerHTML="",e.append(r)}const u=document.querySelector("form");async function w(t){t.preventDefault();const e=new FormData(u);try{const r=y(e);await h(r)}catch(r){g(r.message)}}u.addEventListener("submit",w);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgtNThkYWYzZTMuanMiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2Vycm9ycy50cyIsIi4uLy4uL3NyYy91dGlsL2h0dHAudHMiLCIuLi8uLi9zcmMvdXRpbC92YWxpZGF0aW9uLnRzIiwiLi4vLi4vc3JjL3Bvc3RzL3Bvc3RzLnRzIiwiLi4vLi4vc3JjL3V0aWwvZG9tLnRzIiwiLi4vLi4vc3JjL2FwcC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgSHR0cEVycm9yIHtcbiAgc3RhdHVzQ29kZTogbnVtYmVyO1xuICBtZXNzYWdlOiBzdHJpbmc7XG4gIGRhdGE6IGFueTtcbiAgY29uc3RydWN0b3Ioc3RhdHVzQ29kZTogbnVtYmVyLCBtZXNzYWdlOiBzdHJpbmcsIGRhdGE/OiBhbnkpIHtcbiAgICB0aGlzLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlO1xuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgVmFsaWRhdGlvbkVycm9yIHtcbiAgbWVzc2FnZTogc3RyaW5nO1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlOiBzdHJpbmcpIHtcbiAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICB9XG59XG4iLCJpbXBvcnQgeyBIdHRwRXJyb3IgfSBmcm9tICcuL2Vycm9ycy5qcyc7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZW5kRGF0YVJlcXVlc3QoZGF0YTogYW55KSB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vZHVtbXktc2l0ZS5kZXYvcG9zdHMnLCB7XG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgaGVhZGVyczoge1xuICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICB9LFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpLFxuICB9KTtcblxuICBjb25zdCByZXNwb25zZURhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgIHRocm93IG5ldyBIdHRwRXJyb3IocmVzcG9uc2Uuc3RhdHVzLCAnU2VuZGluZyB0aGUgcmVxdWVzdCBmYWlsZWQuJywgcmVzcG9uc2VEYXRhKTtcbiAgfVxuXG4gIHJldHVybiByZXNwb25zZURhdGE7XG59XG4iLCJpbXBvcnQgeyBWYWxpZGF0aW9uRXJyb3IgfSBmcm9tICcuL2Vycm9ycy5qcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZU5vdEVtcHR5KHRleHQ6IHN0cmluZyB8IG51bGwsIGVycm9yTWVzc2FnZTogc3RyaW5nKSB7XG4gIGlmICghdGV4dCB8fCB0ZXh0LnRyaW0oKS5sZW5ndGggPT09IDApIHtcbiAgICB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKGVycm9yTWVzc2FnZSk7XG4gIH1cbn1cbiIsImltcG9ydCB7IHNlbmREYXRhUmVxdWVzdCB9IGZyb20gJy4uL3V0aWwvaHR0cCc7XG5pbXBvcnQgeyB2YWxpZGF0ZU5vdEVtcHR5IH0gZnJvbSAnLi4vdXRpbC92YWxpZGF0aW9uJztcblxuZXhwb3J0IGZ1bmN0aW9uIHNhdmVQb3N0KHBvc3REYXRhOiBhbnkpIHtcbiAgcG9zdERhdGEuY3JlYXRlZCA9IG5ldyBEYXRlKCk7XG4gIHJldHVybiBzZW5kRGF0YVJlcXVlc3QocG9zdERhdGEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdFBvc3REYXRhKGZvcm06IEZvcm1EYXRhKSB7XG4gIGNvbnN0IHRpdGxlID0gZm9ybS5nZXQoJ3RpdGxlJykgYXMgc3RyaW5nO1xuICBjb25zdCBjb250ZW50ID0gZm9ybS5nZXQoJ2NvbnRlbnQnKSBhcyBzdHJpbmc7XG5cbiAgdmFsaWRhdGVOb3RFbXB0eSh0aXRsZSwgJ0EgdGl0bGUgbXVzdCBiZSBwcm92aWRlZC4nKTtcbiAgdmFsaWRhdGVOb3RFbXB0eShjb250ZW50LCAnQ29udGVudCBtdXN0IG5vdCBiZSBlbXB0eSEnKTtcblxuICByZXR1cm4geyB0aXRsZSwgY29udGVudCB9O1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIHNob3dFcnJvcihtZXNzYWdlOiBzdHJpbmcpIHtcbiAgY29uc3QgZXJyb3JDb250YWluZXJFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Vycm9ycycpIGFzIEhUTUxEaXZFbGVtZW50O1xuICBjb25zdCBlcnJvck1lc3NhZ2VFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpIGFzIEhUTUxQYXJhZ3JhcGhFbGVtZW50O1xuICBlcnJvck1lc3NhZ2VFbGVtZW50LnRleHRDb250ZW50ID0gbWVzc2FnZTtcbiAgZXJyb3JDb250YWluZXJFbGVtZW50LmlubmVySFRNTCA9ICcnO1xuICBlcnJvckNvbnRhaW5lckVsZW1lbnQuYXBwZW5kKGVycm9yTWVzc2FnZUVsZW1lbnQpO1xufVxuIiwiaW1wb3J0IHsgZXh0cmFjdFBvc3REYXRhLCBzYXZlUG9zdCB9IGZyb20gJy4vcG9zdHMvcG9zdHMnO1xuaW1wb3J0IHsgc2hvd0Vycm9yIH0gZnJvbSAnLi91dGlsL2RvbSc7XG5cbmNvbnN0IGZvcm1FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZm9ybScpIGFzIEhUTUxGb3JtRWxlbWVudDtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN1Ym1pdEZvcm1IYW5kbGVyKGV2ZW50OiBTdWJtaXRFdmVudCkge1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKGZvcm1FbGVtZW50KTtcbiAgdHJ5IHtcbiAgICBjb25zdCBwb3N0RGF0YSA9IGV4dHJhY3RQb3N0RGF0YShmb3JtRGF0YSk7XG4gICAgYXdhaXQgc2F2ZVBvc3QocG9zdERhdGEpO1xuICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgc2hvd0Vycm9yKGVycm9yLm1lc3NhZ2UpO1xuICB9XG59XG5cbmZvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIHN1Ym1pdEZvcm1IYW5kbGVyKTtcbiJdLCJuYW1lcyI6WyJIdHRwRXJyb3IiLCJzdGF0dXNDb2RlIiwibWVzc2FnZSIsImRhdGEiLCJfX3B1YmxpY0ZpZWxkIiwiVmFsaWRhdGlvbkVycm9yIiwic2VuZERhdGFSZXF1ZXN0IiwicmVzcG9uc2UiLCJyZXNwb25zZURhdGEiLCJ2YWxpZGF0ZU5vdEVtcHR5IiwidGV4dCIsImVycm9yTWVzc2FnZSIsInNhdmVQb3N0IiwicG9zdERhdGEiLCJleHRyYWN0UG9zdERhdGEiLCJmb3JtIiwidGl0bGUiLCJjb250ZW50Iiwic2hvd0Vycm9yIiwiZXJyb3JDb250YWluZXJFbGVtZW50IiwiZXJyb3JNZXNzYWdlRWxlbWVudCIsImZvcm1FbGVtZW50Iiwic3VibWl0Rm9ybUhhbmRsZXIiLCJldmVudCIsImZvcm1EYXRhIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI4MkJBQU8sTUFBTUEsQ0FBVSxDQUlyQixZQUFZQyxFQUFvQkMsRUFBaUJDLEVBQVksQ0FIN0RDLEVBQUEsbUJBQ0FBLEVBQUEsZ0JBQ0FBLEVBQUEsYUFFRSxLQUFLLFdBQWFILEVBQ2xCLEtBQUssUUFBVUMsRUFDZixLQUFLLEtBQU9DLENBQ2QsQ0FDRixDQUVPLE1BQU1FLENBQWdCLENBRTNCLFlBQVlILEVBQWlCLENBRDdCRSxFQUFBLGdCQUVFLEtBQUssUUFBVUYsQ0FDakIsQ0FDRixDQ2RBLGVBQXNCSSxFQUFnQkgsRUFBVyxDQUN6QyxNQUFBSSxFQUFXLE1BQU0sTUFBTSwrQkFBZ0MsQ0FDM0QsT0FBUSxPQUNSLFFBQVMsQ0FDUCxlQUFnQixrQkFDbEIsRUFDQSxLQUFNLEtBQUssVUFBVUosQ0FBSSxDQUFBLENBQzFCLEVBRUtLLEVBQWUsTUFBTUQsRUFBUyxPQUVoQyxHQUFBLENBQUNBLEVBQVMsR0FDWixNQUFNLElBQUlQLEVBQVVPLEVBQVMsT0FBUSw4QkFBK0JDLENBQVksRUFHM0UsT0FBQUEsQ0FDVCxDQ2hCZ0IsU0FBQUMsRUFBaUJDLEVBQXFCQyxFQUFzQixDQUMxRSxHQUFJLENBQUNELEdBQVFBLEVBQUssS0FBSyxFQUFFLFNBQVcsRUFDNUIsTUFBQSxJQUFJTCxFQUFnQk0sQ0FBWSxDQUUxQyxDQ0hPLFNBQVNDLEVBQVNDLEVBQWUsQ0FDN0IsT0FBQUEsRUFBQSxZQUFjLEtBQ2hCUCxFQUFnQk8sQ0FBUSxDQUNqQyxDQUVPLFNBQVNDLEVBQWdCQyxFQUFnQixDQUN4QyxNQUFBQyxFQUFRRCxFQUFLLElBQUksT0FBTyxFQUN4QkUsRUFBVUYsRUFBSyxJQUFJLFNBQVMsRUFFbEMsT0FBQU4sRUFBaUJPLEVBQU8sMkJBQTJCLEVBQ25EUCxFQUFpQlEsRUFBUyw0QkFBNEIsRUFFL0MsQ0FBRSxNQUFBRCxFQUFPLFFBQUFDLEVBQ2xCLENDaEJPLFNBQVNDLEVBQVVoQixFQUFpQixDQUNuQyxNQUFBaUIsRUFBd0IsU0FBUyxlQUFlLFFBQVEsRUFDeERDLEVBQXNCLFNBQVMsY0FBYyxHQUFHLEVBQ3REQSxFQUFvQixZQUFjbEIsRUFDbENpQixFQUFzQixVQUFZLEdBQ2xDQSxFQUFzQixPQUFPQyxDQUFtQixDQUNsRCxDQ0hBLE1BQU1DLEVBQWMsU0FBUyxjQUFjLE1BQU0sRUFFakQsZUFBc0JDLEVBQWtCQyxFQUFvQixDQUMxREEsRUFBTSxlQUFlLEVBRWYsTUFBQUMsRUFBVyxJQUFJLFNBQVNILENBQVcsRUFDckMsR0FBQSxDQUNJLE1BQUFSLEVBQVdDLEVBQWdCVSxDQUFRLEVBQ3pDLE1BQU1aLEVBQVNDLENBQVEsUUFDaEJZLEdBQ1BQLEVBQVVPLEVBQU0sT0FBTyxDQUN6QixDQUNGLENBRUFKLEVBQVksaUJBQWlCLFNBQVVDLENBQWlCIn0=
